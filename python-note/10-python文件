1.打开关闭文件
        1.打开：open()
            file object = open(file_name [, access_mode][, buffering])
                file_name：文件名
                access_mode:打开方式
                    t：文本模式，默认
                    x：写模式，新建一个文件，如果文件存在就报错
                    b：二进制模式
                    +：打开一个文件进行更新（读写）
                    r：只读
                    r+：读写
                    w：打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。
                    a：追加，打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入
                buffering:如果buffering的值被设为0，就不会有寄存。如果buffering的值取1，访问文件时会寄存行。
                    如果将buffering的值设为大于1的整数，表明了这就是的寄存区的缓冲大小。如果取负值，寄存区的缓冲大小则为系统默认。
        2.关闭 file.close()
                如果打开文件后没有写close()来关闭文件，在程序结束后python解释器会自动关闭文件
        3.返回文件名 file.name
2.文件读写
        1.write()
            write()方法可将任何字符串写入一个打开的文件。需要重点注意的是，Python字符串可以是二进制数据，而不是仅仅是文字。
            write()方法不会在字符串的结尾添加换行符('\n')
        2.read()
            read（）方法从一个打开的文件中读取一个字符串。需要重点注意的是，Python字符串可以是二进制数据，而不是仅仅是文字。
3.文件操作（需要导入os模块）
        1.重命名：os.rename(oldname,newname)
        2.删除文件：os.remove(filename)
